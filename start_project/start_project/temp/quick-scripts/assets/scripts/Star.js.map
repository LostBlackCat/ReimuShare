{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","start","getPlayerDistance","playerPos","game","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewStar","destroy","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KAHP;;AAQL;;AAEA;;AAEAC,SAZK,mBAaL,CAEC,CAfI;;AAgBLC,uBAAmB,6BACnB;AACI;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOZ,GAAGa,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCP,SAAjC,CAAX;AACA,eAAOI,IAAP;AACH,KAvBI;;AAyBLI,cAAU,oBACV;AACI;AACA,aAAKP,IAAL,CAAUQ,YAAV;AACA;AACA,aAAKH,IAAL,CAAUI,OAAV;AACH,KA/BI;AAgCL;AACAC,YAAQ,gBAAUC,EAAV,EACR;AACI;AACA,YAAI,KAAKb,iBAAL,KAA2B,KAAKF,UAApC,EACA;AACI;AACA,iBAAKW,QAAL;AACA;AACH;AACJ;AA1CI,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n        pickRadius: 0\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start()\r\n    {\r\n\r\n    },\r\n    getPlayerDistance: function ()\r\n    {\r\n        // 根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n    },\r\n\r\n    onPicked: function ()\r\n    {\r\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n    // update (dt) {},\r\n    update: function (dt)\r\n    {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        if (this.getPlayerDistance() < this.pickRadius)\r\n        {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n    },\r\n});\r\n"]}