{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","start","update","dt","Math","abs","x"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY,CAFJ;AAGR;AACAC,sBAAc,CAJN;AAKR;AACAC,sBAAc,CANN;AAOR;AACAC,eAAO;AARC,KAHP;AAaLC,mBAAe,yBACf;AACI;AACA,YAAIC,SAASV,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,CAAH,CAAK,CAAL,EAAQ,KAAKP,UAAb,CAA7B,EAAuDQ,MAAvD,CAA8Db,GAAGc,kBAAH,EAA9D,CAAb;AACA;AACA,YAAIC,WAAWf,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA6BN,GAAGY,CAAH,CAAK,CAAL,EAAQ,CAAC,KAAKP,UAAd,CAA7B,EAAwDQ,MAAxD,CAA+Db,GAAGgB,iBAAH,EAA/D,CAAf;AACA;AACA,eAAOhB,GAAGiB,aAAH,CAAiBjB,GAAGkB,QAAH,CAAYR,MAAZ,EAAoBK,QAApB,CAAjB,CAAP;AACH,KArBI;AAsBLI,qBAAiB,2BACjB;AACI,YAAIC,OAAO,IAAX;AACA;AACApB,WAAGqB,YAAH,CAAgBC,WAAhB,CAA4B;AACxBC,mBAAOvB,GAAGwB,aAAH,CAAiBC,QADA;AAExB;AACAC,0BAAc,sBAAUC,OAAV,EAAmBJ,KAAnB,EACd;AACI,wBAAQI,OAAR;AAEI,yBAAK3B,GAAG4B,GAAH,CAAOC,CAAZ;AACIT,6BAAKU,OAAL,GAAe,IAAf;AACAV,6BAAKW,QAAL,GAAgB,KAAhB;AACA;AACJ,yBAAK/B,GAAG4B,GAAH,CAAOI,CAAZ;AACIZ,6BAAKU,OAAL,GAAe,KAAf;AACAV,6BAAKW,QAAL,GAAgB,IAAhB;AACA;AATR;AAWH,aAhBuB;AAiBxB;AACAE,2BAAe,uBAAUN,OAAV,EAAmBJ,KAAnB,EACf;AACI,wBAAQI,OAAR;AAEI,yBAAK3B,GAAG4B,GAAH,CAAOC,CAAZ;AACIT,6BAAKU,OAAL,GAAe,KAAf;AACA;AACJ,yBAAK9B,GAAG4B,GAAH,CAAOI,CAAZ;AACIZ,6BAAKW,QAAL,GAAgB,KAAhB;AACA;AAPR;AASH;AA7BuB,SAA5B,EA8BGX,KAAKc,IA9BR;AA+BH,KAzDI;AA0DL;;AAEA;AACAC,YAAQ,kBACR;AACI;AACA,aAAKC,UAAL,GAAkB,KAAK3B,aAAL,EAAlB;AACA,aAAKyB,IAAL,CAAUG,SAAV,CAAoB,KAAKD,UAAzB;;AAEA;AACA,aAAKN,OAAL,GAAe,KAAf;AACA,aAAKC,QAAL,GAAgB,KAAhB;AACA;AACA,aAAKO,MAAL,GAAc,CAAd;;AAEA;AACA,aAAKnB,eAAL;AACH,KA3EI;AA4ELoB,SA5EK,mBA6EL,CAEC,CA/EI;;;AAiFL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAI,KAAKX,OAAT,EAAkB;AACd,iBAAKQ,MAAL,IAAe,KAAK9B,KAAL,GAAaiC,EAA5B;AACH,SAFD,MAEO,IAAI,KAAKV,QAAT,EAAmB;AACtB,iBAAKO,MAAL,IAAe,KAAK9B,KAAL,GAAaiC,EAA5B;AACH;AACD;AACA,YAAKC,KAAKC,GAAL,CAAS,KAAKL,MAAd,IAAwB,KAAK/B,YAAlC,EAAiD;AAC7C;AACA,iBAAK+B,MAAL,GAAc,KAAK/B,YAAL,GAAoB,KAAK+B,MAAzB,GAAkCI,KAAKC,GAAL,CAAS,KAAKL,MAAd,CAAhD;AACH;;AAED;AACA,aAAKJ,IAAL,CAAUU,CAAV,IAAe,KAAKN,MAAL,GAAcG,EAA7B;AACH;AAjGI,CAAT","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角跳跃高度\r\n        jumpHeight: 0,\r\n        // 主角跳跃持续时间\r\n        jumpDuration: 0,\r\n        // 最大移动速度\r\n        maxMoveSpeed: 0,\r\n        // 加速度\r\n        accel: 0,\r\n    },\r\n    setJumpAction: function ()\r\n    {\r\n        // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // 下落\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    }, \r\n    setInputControl: function ()\r\n    {\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.KEYBOARD,\r\n            // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n            onKeyPressed: function (keyCode, event)\r\n            {\r\n                switch (keyCode)\r\n                {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = true;\r\n                        self.accRight = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                }\r\n            },\r\n            // 松开按键时，停止向该方向的加速\r\n            onKeyReleased: function (keyCode, event)\r\n            {\r\n                switch (keyCode)\r\n                {\r\n                    case cc.KEY.a:\r\n                        self.accLeft = false;\r\n                        break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                }\r\n            }\r\n        }, self.node);\r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    onLoad: function ()\r\n    {\r\n        // 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n\r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n    },\r\n    start()\r\n    {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n    update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n    },\r\n});\r\n"]}