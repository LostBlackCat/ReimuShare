{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Game.js"],"names":["cc","Class","extends","Component","properties","scoreAudio","default","type","AudioClip","starPrefab","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","gainScore","string","toString","audioEngine","playEffect","gameOver","director","loadScene","stopAllActions","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;AAMR;AACAC,oBAAY;AACRH,qBAAS,IADD;AAERC,kBAAMP,GAAGU;AAFD,SAPJ;AAWR;AACAC,yBAAiB,CAZT;AAaRC,yBAAiB,CAbT;AAcR;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGc;AAFL,SAfA;AAmBR;AACAC,gBAAQ;AACJT,qBAAS,IADL;AAEJC,kBAAMP,GAAGc;AAFL,SApBA;AAwBRE,sBAAc;AACVV,qBAAS,IADC;AAEVC,kBAAMP,GAAGiB;AAFC;AAxBN,KAHP;;AAiCL;;AAEA;AACAC,YAAQ,kBACR;AACI;AACA,aAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYO,CAAZ,GAAgB,KAAKP,MAAL,CAAYQ,MAAZ,GAAqB,CAApD;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA;AACA,aAAKC,YAAL;AACA;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KA/CI;;AAiDLD,kBAAc,wBACd;AACI;AACA,YAAIE,UAAU1B,GAAG2B,WAAH,CAAe,KAAKlB,UAApB,CAAd;AACA;AACA,aAAKmB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACA,aAAKV,YAAL,GAAoB,KAAKX,eAAL,GAAuBZ,GAAGkC,UAAH,MAAmB,KAAKvB,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKU,KAAL,GAAa,CAAb;AACH,KA9DI;;AAgELS,wBAAoB,8BACpB;AACI,YAAII,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKjB,OAAL,GAAenB,GAAGkC,UAAH,KAAkB,KAAKnB,MAAL,CAAYiB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAkB,CAA7B;AACAJ,gBAAQnC,GAAGwC,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOtC,GAAGyC,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KA1EI;AA2ELM,eAAW,qBACX;AACI,aAAKjB,KAAL,IAAc,CAAd;AACA;AACA,aAAKT,YAAL,CAAkB2B,MAAlB,GAA2B,YAAY,KAAKlB,KAAL,CAAWmB,QAAX,EAAvC;AACA;AACA5C,WAAG6C,WAAH,CAAeC,UAAf,CAA0B,KAAKzC,UAA/B,EAA2C,KAA3C;AACH,KAlFI;AAmFL0C,cAAU,oBACV;AACI/C,WAAGgD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACA,aAAKlC,MAAL,CAAYmC,cAAZ,GAFJ,CAEkC;AAEjC,KAxFI;AAyFL;AACA;;AAEA;AACAC,YAAQ,gBAAUC,EAAV,EACR;AACI;AACA;AACA,YAAI,KAAK9B,KAAL,GAAa,KAAKC,YAAtB,EACA;AACI,iBAAKwB,QAAL;AACA;AACH;AACD,aAAKzB,KAAL,IAAc8B,EAAd;AACH;AACD;AAxGK,CAAT","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        // 星星产生后消失时间的随机范围\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n        // 地面节点，用于确定星星生成的高度\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // player 节点，用于获取主角弹跳的高度，和控制主角行动开关\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    onLoad: function ()\r\n    {\r\n        // 获取地平面的 y 轴坐标\r\n        this.groundY = this.ground.y + this.ground.height / 2;\r\n        // 初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // 生成一个新的星星\r\n        this.spawnNewStar();\r\n        // 初始化计分\r\n        this.score = 0;\r\n    },\r\n\r\n    spawnNewStar: function ()\r\n    {\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到 Canvas 节点下面\r\n        this.node.addChild(newStar);\r\n        // 为星星设置一个随机位置\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // 将 Game 组件的实例传入星星组件\r\n        newStar.getComponent('Star').game = this;\r\n        // 重置计时器，根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function ()\r\n    {\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width / 2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        // 返回星星坐标\r\n        return cc.p(randX, randY);\r\n    },\r\n    gainScore: function ()\r\n    {\r\n        this.score += 1;\r\n        // 更新 scoreDisplay Label 的文字\r\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    gameOver: function ()\r\n    {\r\n        cc.director.loadScene('game');\r\n        this.player.stopAllActions(); //停止 player 节点的跳跃动作\r\n\r\n    },\r\n    // start()\r\n    // {\r\n\r\n    // },\r\n    update: function (dt)\r\n    {\r\n        // 每帧更新计时器，超过限度还没有生成新的星星\r\n        // 就会调用游戏失败逻辑\r\n        if (this.timer > this.starDuration)\r\n        {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}